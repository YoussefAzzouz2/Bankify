{% extends 'backbase.html.twig' %}

{% block title %}<title>En cours</title>{% endblock %}

{% block content %}
<style>
    /* Styles for the button */
    .button {
        display: inline-block;
        background-color: #4CAF50; /* Green background */
        color: white;
        padding: 5px 10px;
        text-align: center;
        text-decoration: none;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    /* Hover effect */
    .button:hover {
        background-color: #45a049; /* Darker green */
    }

    /* Styles for the buttons */
    .button2 {
        display: inline-block;
        background-color: #007bff; /* Blue background */
        color: white;
        padding: 6px 12px; /* Adjust padding to make the buttons smaller */
        text-align: center;
        text-decoration: none;
        border: none;
        border-radius: 3px;
        cursor: pointer;
        transition: background-color 0.3s;
        margin-right: 5px; /* Add some margin between the buttons */
    }

    /* Hover effect */
    .button2:hover {
        background-color: #0056b3; /* Darker blue on hover */
    }

    /* Table styling */
    .table {
        width: 100%;
        border-collapse: collapse;
        border-spacing: 0;
    }

    .table th,
    .table td {
        border: 1px solid #dddddd;
        text-align: center;
        padding: 8px;
    }

    .table th {
        background-color: #f2f2f2;
    }

    .table tr:nth-child(even) {
        background-color: #f2f2f2;
    }
</style>

<a href="{{ path('credit_index') }}" class="button">Retour</a>
<h2>Les crédits en cours:</h2><br>
<table class="table">
    <thead>
        <tr>
            <th>Id de crédit</th>
            <th>Id de compte</th>
            <th>Montant Total</th>
            <th>Intérêt</th>
            <th>Catégorie</th>
            <th>Date Création</th>
            <th>Durée Totale</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        {% for credit in credits %}
        <tr>
            <td>{{ credit.id }}</td>
            <td>{{ credit.compte.getId() }}</td>
            <td>{{ credit.montantTotale }}</td>
            <td>{{ credit.interet }}</td>
            <td>{{ credit.categorie.getNom() }}</td>
            <td>{{ credit.dateC ? credit.dateC|date('Y-m-d') : '' }}</td>
            <td>{{ credit.dureeTotale }}</td>
            <td>
                <a href="{{ path('admin_show', {'id': credit.id}) }}" class="button2">Plus d'informations</a>
                <br>
                <a href="{{ path('remboursement_admin',{'id': credit.id}) }}" style="background-color:red" class="button2">Suivre remboursements</a>
            </td>
        </tr>
        {% else %}
        <tr>
            <td colspan="8" style="text-align: center;">Pas de crédit en cours...</td>
        </tr>
        {% endfor %}
    </tbody>
</table>

<div style="text-align: center; margin-top: 20px;">
    {% do credits.setPageRange(3) %}
    {{ knp_pagination_render(credits,'credit/pagination.html.twig') }}
</div>

<form id="searchForm">
    <input type="text" name="keyword" id="keyword" placeholder="Rechercher par numéro, montant, intérêt, date ou durée totale">
    <button type="submit">Rechercher</button>
</form>
<script>
    const searchForm = document.getElementById('searchForm');

// Ajoutez un écouteur d'événement pour le soumission du formulaire
searchForm.addEventListener('submit', function(event) {
    event.preventDefault(); // Empêchez le formulaire de soumettre normalement

    // Récupérez le mot-clé de recherche depuis l'input
    const keyword = document.getElementById('keyword').value;

    // Envoyez le mot-clé au contrôleur Symfony via AJAX
    fetch('{{ path('credit_search') }}?keyword=' + encodeURIComponent(keyword), {
        method: 'GET',
    })
    .then(response => response.json())
    .then(data => {
        // Mettez à jour la section des résultats avec les nouveaux crédits
        const creditsTableBody = document.querySelector('.table tbody');
        creditsTableBody.innerHTML = ''; // Effacez les résultats précédents
    
        data.credits.forEach(credit => {
            // Vérifiez si credit est défini
            if (credit && typeof credit === 'object') {
                // Créez les lignes de tableau pour chaque crédit
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${credit.id ? credit.id : ''}</td>
                    <td>${credit.compteId ? credit.compteId : ''}</td>
                    <td>${credit.montantTotale ? credit.montantTotale : ''}</td>
                    <td>${credit.interet ? credit.interet : ''}</td>
                    <td>${credit.categorieNom ? credit.categorieNom : ''}</td>
                    <td>${credit.dateC ? credit.dateC : ''}</td>
                    <td>${credit.dureeTotale ? credit.dureeTotale : ''}</td>
                    <td>
                        <a href="${credit.admin_show_url ? credit.admin_show_url : ''}" class="button2">Plus d'informations</a>
                        <br>
                        <a href="${credit.remboursement_admin_url ? credit.remboursement_admin_url : ''}" style="background-color:red" class="button2">Suivre remboursements</a>
                    </td>
                `;
                creditsTableBody.appendChild(row);
            }
        });
    })
    .catch(error => {
        console.error('Error:', error);
    });
});
</script>
{% endblock %}
